import{_ as p,C as l,c as t,o as d,aA as n,j as a,G as e,a as h,w as o}from"./chunks/framework.DpoPorFA.js";const f=JSON.parse('{"title":"Generalized Grids for Data Extraction","description":"","frontmatter":{},"headers":[],"relativePath":"types/generalized.md","filePath":"types/generalized.md","lastUpdated":null}'),r={name:"types/generalized.md"},c={class:"jldocstring custom-block",open:""};function k(N,s,g,E,u,y){const i=l("Badge");return d(),t("div",null,[s[4]||(s[4]=n(`<h1 id="Generalized-Grids-for-Data-Extraction" tabindex="-1">Generalized Grids for Data Extraction <a class="header-anchor" href="#Generalized-Grids-for-Data-Extraction" aria-label="Permalink to &quot;Generalized Grids for Data Extraction {#Generalized-Grids-for-Data-Extraction}&quot;">​</a></h1><p>The most straightforward of the <code>RegionGrid</code> types is the <code>RectilinearGrid</code>. This is the type that is used for most datasets on a rectilinear longitude/latitude grid. Examples of such datasets include:</p><ul><li><p><a href="https://gpm.nasa.gov/data/directory" target="_blank" rel="noreferrer">Level 2 products from the Global Precipitation Measurement Mission</a></p></li><li><p>Model output from climate models such as <a href="https://www.mmm.ucar.edu/models/wrf" target="_blank" rel="noreferrer">Weather Research &amp; Forecasting Model (WRF)</a></p></li></ul><p>Basically, for each of these datasets, the data is given in such a way that the coordinates of the grid can be expressed via:</p><ul><li>A 2D array of <code>Point2</code> types, with each <code>Point2</code> type containing (lon,lat)</li></ul><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> GeoRegions</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RegionGrids</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CairoMakie</span></span></code></pre></div><h2 id="Creating-Generalized-Grids" tabindex="-1">Creating Generalized Grids <a class="header-anchor" href="#Creating-Generalized-Grids" aria-label="Permalink to &quot;Creating Generalized Grids {#Creating-Generalized-Grids}&quot;">​</a></h2><p>A Rectilinear Grid can be created as follows:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ggrd = RegionGrid(geo,Point2.(lon,lat))</span></span></code></pre></div><p>where <code>geo</code> is a <code>GeoRegion</code> of interest that is found within the domain defined by the longitude and latitude grid vectors.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">nlon </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 51</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; nlat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 31</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lon </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> zeros</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nlon,nlat)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> zeros</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nlon,nlat)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ilat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nlat, ilon </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> :</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> nlon</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lon[ilon,ilat] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ilon</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">26</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ilat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0.1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lat[ilon,ilat] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ilat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">geo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">230</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ggrd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RegionGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(geo,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Point2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.(lon,lat))</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>The GeneralMask type has the following properties:</span></span>
<span class="line"><span>    Longitude Indices     (ilon)</span></span>
<span class="line"><span>    Latitude Indices      (ilat)</span></span>
<span class="line"><span>    Longitude Points       (lon)</span></span>
<span class="line"><span>    Latitude Points        (lat)</span></span>
<span class="line"><span>    Rotated X Coordinates    (X)</span></span>
<span class="line"><span>    Rotated Y Coordinates    (Y)</span></span>
<span class="line"><span>    Rotation (°)             (θ) : 0.0</span></span>
<span class="line"><span>    RegionGrid Mask       (mask)</span></span>
<span class="line"><span>    RegionGrid Weights (weights)</span></span>
<span class="line"><span>    RegionGrid Size 	          : 51 lon points x 17 lat points</span></span>
<span class="line"><span>    RegionGrid Validity          : 368 / 867</span></span></code></pre></div><p>The API for creating a Rectilinear Grid can be found <a href="./generalized">here</a></p><h2 id="What-is-in-a-Generalized-Grid?" tabindex="-1">What is in a Generalized Grid? <a class="header-anchor" href="#What-is-in-a-Generalized-Grid?" aria-label="Permalink to &quot;What is in a Generalized Grid? {#What-is-in-a-Generalized-Grid?}&quot;">​</a></h2>`,14)),a("details",c,[a("summary",null,[s[0]||(s[0]=a("a",{id:"RegionGrids.RectilinearGrid",href:"#RegionGrids.RectilinearGrid"},[a("span",{class:"jlbinding"},"RegionGrids.RectilinearGrid")],-1)),s[1]||(s[1]=h()),e(i,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[3]||(s[3]=n('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RectilinearGrid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RegionGrid</span></span></code></pre></div><p>A <code>RectilinearGrid</code> is a <code>RegionGrid</code> that is created based on rectilinear longitude/latitude grids. It has its own subtypes: <code>RectGrid</code>, <code>TiltGrid</code> and <code>PolyGrid</code>.</p><p>All <code>RectilinearGrid</code> types contain the following fields:</p><ul><li><p><code>lon</code> - A Vector of <code>Float</code>s, defining the longitude vector describing the region.</p></li><li><p><code>lat</code> - A Vector of <code>Float</code>s, defining the latitude vector describing the region.</p></li><li><p><code>ilon</code> - A Vector of <code>Int</code>s, defining the indices used to extract the longitude vector from the input longitude vector.</p></li><li><p><code>ilat</code> - A Vector of <code>Int</code>s, defining the indices used to extract the latitude vector from the input latitude vector.</p></li><li><p><code>mask</code> - An Array of NaNs and 1s, defining the gridpoints in the RegionGrid where the data is valid.</p></li><li><p><code>weights</code> - A Vector of <code>Float</code>s, defining the latitude-weights of each valid point in the grid. Will be NaN if outside the bounds of the GeoRegion used to define this RectilinearGrid.</p></li><li><p><code>X</code> - A Vector of <code>Float</code>s, defining the X-coordinates (in meters) of each point in the &quot;derotated&quot; RegionGrid about the centroid for the shape of the GeoRegion.</p></li><li><p><code>Y</code> - A Vector of <code>Float</code>s, defining the Y-coordinates (in meters) of each point in the &quot;derotated&quot; RegionGrid about the centroid for the shape of the GeoRegion.</p></li><li><p><code>θ</code> - A <code>Float</code> storing the information on the angle (in degrees) about which the data was rotated in the anti-clockwise direction. Mathematically, it is <code>rotation - geo.θ</code>.</p></li></ul>',4)),e(i,{type:"info",class:"source-link",text:"source"},{default:o(()=>s[2]||(s[2]=[a("a",{href:"https://github.com/GeoRegionsEcosystem/RegionGrids.jl/blob/5ac65f9789eb376d2f1cdd38b82266fc54163e7e/src/RegionGrids.jl#L24-L39",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),s[5]||(s[5]=n(`<p>We see that in a <code>GeneralizedGrid</code> type, we have the <code>lon</code> and <code>lat</code> arrays that defined the longitude and latitude points that have been cropped to fit the GeoRegion bounds.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ggrd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lon</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>51×17 Matrix{Float64}:</span></span>
<span class="line"><span> 252.5  250.0  247.5  245.0  242.5  …  222.5  220.0  217.5  215.0  212.5</span></span>
<span class="line"><span> 256.8  254.4  252.0  249.6  247.2     228.0  225.6  223.2  220.8  218.4</span></span>
<span class="line"><span> 261.1  258.8  256.5  254.2  251.9     233.5  231.2  228.9  226.6  224.3</span></span>
<span class="line"><span> 265.4  263.2  261.0  258.8  256.6     239.0  236.8  234.6  232.4  230.2</span></span>
<span class="line"><span> 269.7  267.6  265.5  263.4  261.3     244.5  242.4  240.3  238.2  236.1</span></span>
<span class="line"><span> 274.0  272.0  270.0  268.0  266.0  …  250.0  248.0  246.0  244.0  242.0</span></span>
<span class="line"><span> 278.3  276.4  274.5  272.6  270.7     255.5  253.6  251.7  249.8  247.9</span></span>
<span class="line"><span> 282.6  280.8  279.0  277.2  275.4     261.0  259.2  257.4  255.6  253.8</span></span>
<span class="line"><span> 286.9  285.2  283.5  281.8  280.1     266.5  264.8  263.1  261.4  259.7</span></span>
<span class="line"><span> 291.2  289.6  288.0  286.4  284.8     272.0  270.4  268.8  267.2  265.6</span></span>
<span class="line"><span>   ⋮                                ⋱                         ⋮    </span></span>
<span class="line"><span>  73.1   74.8   76.5   78.2   79.9      93.5   95.2   96.9   98.6  100.3</span></span>
<span class="line"><span>  77.4   79.2   81.0   82.8   84.6      99.0  100.8  102.6  104.4  106.2</span></span>
<span class="line"><span>  81.7   83.6   85.5   87.4   89.3     104.5  106.4  108.3  110.2  112.1</span></span>
<span class="line"><span>  86.0   88.0   90.0   92.0   94.0  …  110.0  112.0  114.0  116.0  118.0</span></span>
<span class="line"><span>  90.3   92.4   94.5   96.6   98.7     115.5  117.6  119.7  121.8  123.9</span></span>
<span class="line"><span>  94.6   96.8   99.0  101.2  103.4     121.0  123.2  125.4  127.6  129.8</span></span>
<span class="line"><span>  98.9  101.2  103.5  105.8  108.1     126.5  128.8  131.1  133.4  135.7</span></span>
<span class="line"><span> 103.2  105.6  108.0  110.4  112.8     132.0  134.4  136.8  139.2  141.6</span></span>
<span class="line"><span> 107.5  110.0  112.5  115.0  117.5  …  137.5  140.0  142.5  145.0  147.5</span></span></code></pre></div><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ggrd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lat</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>51×17 Matrix{Float64}:</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0  …  20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0     20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0     20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0     20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0     20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0  …  20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0     20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0     20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0     20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0     20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span>   ⋮                                ⋱                           ⋮    </span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0     20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0     20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0     20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0  …  20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0     20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0     20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0     20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0     20.0  25.0  30.0  35.0  40.0  45.0</span></span>
<span class="line"><span> -35.0  -30.0  -25.0  -20.0  -15.0  …  20.0  25.0  30.0  35.0  40.0  45.0</span></span></code></pre></div><h2 id="An-example-of-using-Rectilinear-Grids" tabindex="-1">An example of using Rectilinear Grids <a class="header-anchor" href="#An-example-of-using-Rectilinear-Grids" aria-label="Permalink to &quot;An example of using Rectilinear Grids {#An-example-of-using-Rectilinear-Grids}&quot;">​</a></h2><p>Say we have some sample data, here randomly generated.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nlon,nlat)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>51×31 Matrix{Float64}:</span></span>
<span class="line"><span> 0.270428   0.27235    0.434886  …  0.450461   0.782052   0.785955</span></span>
<span class="line"><span> 0.429792   0.857256   0.549432     0.365193   0.360154   0.804527</span></span>
<span class="line"><span> 0.173814   0.381361   0.187887     0.993622   0.0288532  0.407843</span></span>
<span class="line"><span> 0.524008   0.967656   0.606641     0.791952   0.762225   0.469624</span></span>
<span class="line"><span> 0.254016   0.595916   0.534109     0.886924   0.482683   0.835509</span></span>
<span class="line"><span> 0.134997   0.177552   0.413689  …  0.356398   0.412909   0.837419</span></span>
<span class="line"><span> 0.632165   0.242995   0.961587     0.945783   0.701618   0.879785</span></span>
<span class="line"><span> 0.94938    0.951672   0.437636     0.630244   0.544551   0.311082</span></span>
<span class="line"><span> 0.162489   0.936794   0.207728     0.354036   0.378526   0.985804</span></span>
<span class="line"><span> 0.338545   0.540924   0.944468     0.372101   0.529601   0.180164</span></span>
<span class="line"><span> ⋮                               ⋱                        ⋮</span></span>
<span class="line"><span> 0.987537   0.158739   0.390999     0.238662   0.44423    0.000177855</span></span>
<span class="line"><span> 0.112922   0.161387   0.545355     0.677669   0.743967   0.0610754</span></span>
<span class="line"><span> 0.495931   0.202582   0.766729     0.230405   0.768042   0.632384</span></span>
<span class="line"><span> 0.352853   0.607172   0.406991  …  0.122354   0.799786   0.107576</span></span>
<span class="line"><span> 0.998157   0.0560547  0.1475       0.0271657  0.231117   0.131539</span></span>
<span class="line"><span> 0.396678   0.893968   0.24894      0.848912   0.419491   0.304333</span></span>
<span class="line"><span> 0.0919366  0.206535   0.452119     0.160634   0.681683   0.603014</span></span>
<span class="line"><span> 0.675249   0.0356341  0.904467     0.186712   0.837751   0.926626</span></span>
<span class="line"><span> 0.880451   0.640697   0.810726  …  0.821625   0.556594   0.16613</span></span></code></pre></div><p>We extract the valid data within the GeoRegion of interest that we defined above:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ndata </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> extract</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data,ggrd)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>51×17 Matrix{Float64}:</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN  NaN         NaN          …  NaN         NaN  NaN  NaN</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN  NaN         NaN             NaN         NaN  NaN  NaN</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN  NaN         NaN             NaN         NaN  NaN  NaN</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN  NaN         NaN             NaN         NaN  NaN  NaN</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN  NaN         NaN             NaN         NaN  NaN  NaN</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN  NaN         NaN          …  NaN         NaN  NaN  NaN</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN  NaN         NaN             NaN         NaN  NaN  NaN</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN  NaN         NaN             NaN         NaN  NaN  NaN</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN  NaN         NaN             NaN         NaN  NaN  NaN</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN  NaN         NaN             NaN         NaN  NaN  NaN</span></span>
<span class="line"><span>   ⋮                               ⋮          ⋱                     ⋮  </span></span>
<span class="line"><span> NaN  NaN  NaN  NaN    0.477901    0.157375        0.646625  NaN  NaN  NaN</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN    0.291025    0.283025        0.398601  NaN  NaN  NaN</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN    0.515485    0.949979        0.16045   NaN  NaN  NaN</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN  NaN           0.287527   …    0.921628  NaN  NaN  NaN</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN  NaN           0.926412        0.458501  NaN  NaN  NaN</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN  NaN           0.14377       NaN         NaN  NaN  NaN</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN  NaN           0.0541096     NaN         NaN  NaN  NaN</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN  NaN           0.991014      NaN         NaN  NaN  NaN</span></span>
<span class="line"><span> NaN  NaN  NaN  NaN  NaN         NaN          …  NaN         NaN  NaN  NaN</span></span></code></pre></div><p>And now let us visualize the results.</p><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>slon,slat = coordinates(geo) # extract the coordinates</span></span>
<span class="line"><span>fig = Figure()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ax1 = Axis(</span></span>
<span class="line"><span>    fig[1,1],width=450,height=150,</span></span>
<span class="line"><span>    limits=(-180,360,-90,90)</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span>contourf!(ax1,lon,lat,data,colorrange=(-1,1))</span></span>
<span class="line"><span>lines!(ax1,slon,slat,color=:black,linewidth=2)</span></span>
<span class="line"><span>lines!(ax1,slon.+360,slat,color=:black,linewidth=2,linestyle=:dash)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>hidexdecorations!(ax1,ticks=false,grid=false)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ax2 = Axis(</span></span>
<span class="line"><span>    fig[2,1],width=450,height=150,</span></span>
<span class="line"><span>    limits=(-180,360,-90,90)</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span>contourf!(ax2,ggrd.lon,ggrd.lat,ndata,colorrange=(-1,1))</span></span>
<span class="line"><span>lines!(ax2,slon,slat,color=:black,linewidth=2)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Label(fig[3,:],&quot;Longitude / º&quot;)</span></span>
<span class="line"><span>Label(fig[:,0],&quot;Latitude / º&quot;,rotation=pi/2)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>resize_to_layout!(fig)</span></span>
<span class="line"><span>fig</span></span></code></pre></div>`,14))])}const C=p(r,[["render",k]]);export{f as __pageData,C as default};
