import{_ as a,c as n,o as i,ai as p}from"./chunks/framework.DFffitLo.js";const g=JSON.parse('{"title":"An Example of how to use RegionGrids","description":"","frontmatter":{},"headers":[],"relativePath":"example.md","filePath":"example.md","lastUpdated":null}'),l={name:"example.md"};function e(t,s,h,k,o,d){return i(),n("div",null,s[0]||(s[0]=[p(`<h1 id="An-Example-of-how-to-use-RegionGrids" tabindex="-1">An Example of how to use RegionGrids <a class="header-anchor" href="#An-Example-of-how-to-use-RegionGrids" aria-label="Permalink to &quot;An Example of how to use RegionGrids {#An-Example-of-how-to-use-RegionGrids}&quot;">​</a></h1><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>using GeoRegions</span></span>
<span class="line"><span>using RegionGrids</span></span>
<span class="line"><span>using DelimitedFiles</span></span>
<span class="line"><span>using CairoMakie</span></span>
<span class="line"><span></span></span>
<span class="line"><span>download(&quot;https://raw.githubusercontent.com/natgeo-wong/GeoPlottingData/main/coastline_resl.txt&quot;,&quot;coast.cst&quot;)</span></span>
<span class="line"><span>coast = readdlm(&quot;coast.cst&quot;,comments=true)</span></span>
<span class="line"><span>clon  = coast[:,1]</span></span>
<span class="line"><span>clat  = coast[:,2]</span></span>
<span class="line"><span>nothing</span></span></code></pre></div><p>Let us define some random data:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lon </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">360</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);  nlon </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lon)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> collect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); nlat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> length</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(lat)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> rand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nlon,nlat)</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>361×181 Matrix{Float64}:</span></span>
<span class="line"><span> 0.962175   0.172126    0.250992   …  0.454057   0.417052   0.48053</span></span>
<span class="line"><span> 0.0770902  0.591777    0.34106       0.0457867  0.138694   0.792769</span></span>
<span class="line"><span> 0.0147662  0.523963    0.9298        0.47206    0.568269   0.755567</span></span>
<span class="line"><span> 0.190796   0.835118    0.515336      0.38046    0.757433   0.194449</span></span>
<span class="line"><span> 0.681775   0.472646    0.561132      0.819747   0.485395   0.864851</span></span>
<span class="line"><span> 0.847695   0.107154    0.0928031  …  0.0975874  0.786277   0.70442</span></span>
<span class="line"><span> 0.109611   0.741945    0.419797      0.625256   0.0690036  0.0328859</span></span>
<span class="line"><span> 0.680828   0.277504    0.485918      0.63851    0.602404   0.772598</span></span>
<span class="line"><span> 0.458335   0.00522956  0.575346      0.131084   0.840122   0.442412</span></span>
<span class="line"><span> 0.303364   0.906747    0.514707      0.928285   0.163937   0.959871</span></span>
<span class="line"><span> ⋮                                 ⋱                        ⋮</span></span>
<span class="line"><span> 0.445844   0.815105    0.365137      0.938889   0.442915   0.573405</span></span>
<span class="line"><span> 0.381791   0.749458    0.142997      0.667201   0.635624   0.10392</span></span>
<span class="line"><span> 0.979704   0.100421    0.860638      0.0109495  0.872634   0.916742</span></span>
<span class="line"><span> 0.237124   0.626057    0.963472   …  0.403032   0.922673   0.270604</span></span>
<span class="line"><span> 0.417054   0.238331    0.452548      0.467003   0.0847661  0.786912</span></span>
<span class="line"><span> 0.190259   0.672883    0.126554      0.678773   0.288093   0.76135</span></span>
<span class="line"><span> 0.0631239  0.105148    0.900361      0.981648   0.619993   0.652952</span></span>
<span class="line"><span> 0.330092   0.564581    0.648944      0.248436   0.43417    0.736843</span></span>
<span class="line"><span> 0.370152   0.270236    0.444552   …  0.414626   0.788235   0.11393</span></span></code></pre></div><p>Next, we proceed to define a GeoRegion and extract its coordinates:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">geo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">slon,slat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> coordinates</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(geo) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># extract the coordinates</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>([10.0, 100.0, -50.0, 10.0], [20.0, 10.0, 0.0, 20.0])</span></span></code></pre></div><p>Following which, we can extract the data within this GeoRegion as follows:</p><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ggrd = RegionGrid(geo,lon,lat)</span></span>
<span class="line"><span>ndata = extract(data,ggrd)</span></span></code></pre></div><p>And we can visualize this by plotting the data</p><div class="language-@example vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">@example</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>fig = Figure()</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ax1 = Axis(</span></span>
<span class="line"><span>    fig[1,1],width=750,height=375,</span></span>
<span class="line"><span>    limits=(0,360,-90,90)</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span>contourf!(ax1,lon,lat,data,levels=range(-1,1,length=11))</span></span>
<span class="line"><span>lines!(ax1,slon,slat,color=:black,linewidth=5)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ax2 = Axis(</span></span>
<span class="line"><span>    fig[2,1],width=750,height=375,</span></span>
<span class="line"><span>    limits=(0,360,-90,90)</span></span>
<span class="line"><span>)</span></span>
<span class="line"><span>contourf!(ax2,ggrd.lon,ggrd.lat,ndata,levels=range(-1,1,length=11))</span></span>
<span class="line"><span>lines!(ax1,slon,slat,color=:black,linewidth=5)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>resize_to_layout!(fig)</span></span>
<span class="line"><span>fig</span></span></code></pre></div>`,12)]))}const r=a(l,[["render",e]]);export{g as __pageData,r as default};
