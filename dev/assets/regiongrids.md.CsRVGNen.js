import{_ as a,C as r,c as d,o as n,ai as o,j as i,a as s,G as l}from"./chunks/framework.DFffitLo.js";const c="/RegionGrids.jl/dev/assets/typesofgrids.pXI8p_IV.png",b=JSON.parse('{"title":"What is a RegionGrid?","description":"","frontmatter":{},"headers":[],"relativePath":"regiongrids.md","filePath":"regiongrids.md","lastUpdated":null}'),g={name:"regiongrids.md"},p={class:"jldocstring custom-block",open:""};function h(u,e,f,_,G,R){const t=r("Badge");return n(),d("div",null,[e[3]||(e[3]=o('<h1 id="What-is-a-RegionGrid?" tabindex="-1">What is a RegionGrid? <a class="header-anchor" href="#What-is-a-RegionGrid?" aria-label="Permalink to &quot;What is a RegionGrid? {#What-is-a-RegionGrid?}&quot;">​</a></h1><p>A <code>RegionGrid</code> contains information that:</p><ul><li><p>Allows us to extract gridded lon-lat data for a given <code>GeoRegion</code> (see <a href="https://github.com/GeoRegionsEcosystem/GeoRegions.jl" target="_blank" rel="noreferrer">GeoRegions.jl</a>) of interest.</p></li><li><p>Subset the relevant longitude/latitude vectors from the initial grid.</p></li><li><p>Allows for easy spatial-averaging of extracted gridded lon-lat data, weighted by latitude.</p></li></ul>',3)),i("details",p,[i("summary",null,[e[0]||(e[0]=i("a",{id:"RegionGrids.RegionGrid",href:"#RegionGrids.RegionGrid"},[i("span",{class:"jlbinding"},"RegionGrids.RegionGrid")],-1)),e[1]||(e[1]=s()),l(t,{type:"info",class:"jlObjectType jlType",text:"Type"})]),e[2]||(e[2]=o('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RegionGrid</span></span></code></pre></div><p>Abstract supertype for geographical region gridded information. All <code>RegionGrids</code> will contain the following fields:</p><ul><li><p><code>lon</code> - A Vector or Matrix of <code>Float</code>s, defining the longitude grids describing the region.</p></li><li><p><code>lat</code> - A Vector or Matrix of <code>Float</code>s, defining the latitude grids describing the region.</p></li><li><p><code>weights</code> - An Vector or Matrix of <code>Float</code>s, defining the latitude-weights of each valid point in the grid. Will be NaN if outside the bounds of the GeoRegion used to define this RectilinearGrid.</p></li><li><p><code>X</code> - A Vector or Matrix of <code>Float</code>s, defining the X-coordinates (in meters) of each point in the &quot;derotated&quot; RegionGrid about the centroid for the shape of the GeoRegion.</p></li><li><p><code>Y</code> - A Vector or Matrix of <code>Float</code>s, defining the Y-coordinates (in meters) of each point in the &quot;derotated&quot; RegionGrid about the centroid for the shape of the GeoRegion.</p></li><li><p><code>θ</code> - A <code>Float</code> storing the information on the angle (in degrees) about which the data was rotated in the anti-clockwise direction. Mathematically, it is <code>rotation - geo.θ</code>.</p></li></ul><p><a href="https://github.com/GeoRegionsEcosystem/RegionGrids.jl/blob/0630808279313c9a90cafe3246ea89ad38e68d3b/src/RegionGrids.jl#L19-L29" target="_blank" rel="noreferrer">source</a></p>',4))]),e[4]||(e[4]=o('<p>The <code>RegionGrid</code> abstract type has three subtypes:</p><ol><li><p><code>RectilinearGrid</code> type, which is for the extraction of data on rectilinear lon-lat grids</p></li><li><p><code>GeneralizedGrid</code> type, which is for the extraction of data on non-rectilinear lon-lat grids, such as a curvilinear grid.</p></li><li><p><code>UnstructuredGrid</code> type, which is for the extraction of data on unstructured lon-lat grids such as a cubed-spherical grid, or an unstructured mesh.</p></li></ol><p><img src="'+c+'" alt=""></p><p>Confusing? Fret not, it&#39;s always easier to understand by doing, so let&#39;s go through some examples <a href="./regiongrids">here</a>.</p>',4))])}const T=a(g,[["render",h]]);export{b as __pageData,T as default};
