import{_ as l,c as o,a5 as e,j as s,a as t,G as n,B as r,o as d}from"./chunks/framework.CqmzErJW.js";const M=JSON.parse('{"title":"RegionGrids","description":"","frontmatter":{},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":null}'),p={name:"index.md"},g={class:"jldocstring custom-block",open:""},h={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},R={class:"jldocstring custom-block",open:""},G={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},j={class:"jldocstring custom-block",open:""};function C(v,i,T,x,w,B){const a=r("Badge");return d(),o("div",null,[i[45]||(i[45]=e('<h1 id="regiongrids" tabindex="-1">RegionGrids <a class="header-anchor" href="#regiongrids" aria-label="Permalink to &quot;RegionGrids&quot;">â€‹</a></h1><p>Documentation for <a href="https://github.com/natgeo-wong/RegionGrids.jl" target="_blank" rel="noreferrer">RegionGrids</a>.</p><ul><li><a href="#RegionGrids.GeneralizedGrid"><code>RegionGrids.GeneralizedGrid</code></a></li><li><a href="#RegionGrids.PolyGrid"><code>RegionGrids.PolyGrid</code></a></li><li><a href="#RegionGrids.RectGrid"><code>RegionGrids.RectGrid</code></a></li><li><a href="#RegionGrids.RectilinearGrid"><code>RegionGrids.RectilinearGrid</code></a></li><li><a href="#RegionGrids.RegionGrid-Tuple{RectRegion, Vector{&lt;:Real}, Vector{&lt;:Real}}"><code>RegionGrids.RegionGrid</code></a></li><li><a href="#RegionGrids.RegionGrid-Union{Tuple{FT}, Tuple{GeoRegion, Array{Point2{FT}}}} where FT&lt;:Real"><code>RegionGrids.RegionGrid</code></a></li><li><a href="#RegionGrids.RegionGrid"><code>RegionGrids.RegionGrid</code></a></li><li><a href="#RegionGrids.RegionMask"><code>RegionGrids.RegionMask</code></a></li><li><a href="#RegionGrids.TiltGrid"><code>RegionGrids.TiltGrid</code></a></li><li><a href="#RegionGrids.VectorMask"><code>RegionGrids.VectorMask</code></a></li><li><a href="#RegionGrids.VectorGrid-Union{Tuple{FT}, Tuple{GeoRegion, Array{Point2{FT}, 1}}} where FT&lt;:Real"><code>RegionGrids.VectorGrid</code></a></li><li><a href="#RegionGrids.extract-Tuple{AbstractArray{&lt;:Real}, RegionMask}"><code>RegionGrids.extract</code></a></li><li><a href="#RegionGrids.extract-Union{Tuple{FT}, Tuple{AbstractArray{FT}, RegionGrid}} where FT&lt;:Real"><code>RegionGrids.extract</code></a></li><li><a href="#RegionGrids.extract!-Tuple{AbstractArray{&lt;:Real}, AbstractArray{&lt;:Real}, RegionGrid}"><code>RegionGrids.extract!</code></a></li><li><a href="#RegionGrids.extract!-Tuple{AbstractArray{&lt;:Real}, AbstractArray{&lt;:Real}, RegionMask}"><code>RegionGrids.extract!</code></a></li></ul>',3)),s("details",g,[s("summary",null,[i[0]||(i[0]=s("a",{id:"RegionGrids.GeneralizedGrid",href:"#RegionGrids.GeneralizedGrid"},[s("span",{class:"jlbinding"},"RegionGrids.GeneralizedGrid")],-1)),i[1]||(i[1]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[2]||(i[2]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">GeneralizedGrid</span></span></code></pre></div><p>A <code>GeneralizedGrid</code> is a <code>RegionGrid</code> that is created based on longitude/latitude grids that are <strong>not</strong> rectilinear - this can range from curvilinear grids to unstructured grids. It has its own subtypes: <code>RegionMask</code> and <code>VectorMask</code>.</p><p>All <code>GeneralizedGrid</code> type will contain the following fields:</p><ul><li><p><code>lon</code> - An array of <code>Float</code>s, defining longitude points</p></li><li><p><code>lat</code> - An array of <code>Float</code>s, defining latitude points</p></li><li><p><code>mask</code> - An array of NaNs and 1s, defining the region within the original field in which data points are valid</p></li><li><p><code>weights</code> - An array of <code>Float</code>s, defining the latitude-weights of each valid point in the grid.</p></li></ul><p><a href="https://github.com/GeoRegionsEcosystem/RegionGrids.jl/blob/09c3a8419304463381057d4263e77b7c3ef7ab7d/src/RegionGrids.jl#L97-L107" target="_blank" rel="noreferrer">source</a></p>',5))]),s("details",h,[s("summary",null,[i[3]||(i[3]=s("a",{id:"RegionGrids.PolyGrid",href:"#RegionGrids.PolyGrid"},[s("span",{class:"jlbinding"},"RegionGrids.PolyGrid")],-1)),i[4]||(i[4]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[5]||(i[5]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PolyGrid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RegionGrid</span></span></code></pre></div><p>Information on a <code>RectilinearGrid</code> type that is extracted based on a <code>PolyRegion</code> type.</p><p><a href="https://github.com/GeoRegionsEcosystem/RegionGrids.jl/blob/09c3a8419304463381057d4263e77b7c3ef7ab7d/src/RegionGrids.jl#L61-L65" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",c,[s("summary",null,[i[6]||(i[6]=s("a",{id:"RegionGrids.RectGrid",href:"#RegionGrids.RectGrid"},[s("span",{class:"jlbinding"},"RegionGrids.RectGrid")],-1)),i[7]||(i[7]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[8]||(i[8]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RectGrid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RegionGrid</span></span></code></pre></div><p>Information on a <code>RectilinearGrid</code> type that is extracted based on a <code>RectRegion</code> type.</p><p><a href="https://github.com/GeoRegionsEcosystem/RegionGrids.jl/blob/09c3a8419304463381057d4263e77b7c3ef7ab7d/src/RegionGrids.jl#L46-L50" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",k,[s("summary",null,[i[9]||(i[9]=s("a",{id:"RegionGrids.RectilinearGrid",href:"#RegionGrids.RectilinearGrid"},[s("span",{class:"jlbinding"},"RegionGrids.RectilinearGrid")],-1)),i[10]||(i[10]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[11]||(i[11]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RectilinearGrid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RegionGrid</span></span></code></pre></div><p>A <code>RectilinearGrid</code> is a <code>RegionGrid</code> that is created based on rectilinear longitude/latitude grids. It has its own subtypes: <code>RectGrid</code>, <code>TiltGrid</code> and <code>PolyGrid</code>.</p><p>All <code>RectilinearGrid</code> types contain the following fields:</p><ul><li><p><code>grid</code> - A vector of <code>Int</code>s, defining the gridpoint indices of the [N,S,E,W] points respectively</p></li><li><p><code>lon</code> - A vector of <code>Float</code>s, defining the latitude vector describing the region</p></li><li><p><code>lat</code> - A vector of <code>Float</code>s, defining the latitude vector describing the region</p></li><li><p><code>ilon</code> - A vector of <code>Int</code>s, defining indices of the parent longitude vector describing the region</p></li><li><p><code>ilat</code> - A vector of <code>Int</code>s, defining indices of the parent latitude vector describing the region</p></li><li><p><code>mask</code> - An array of NaNs and 1s, defining a non-rectilinear shape within a rectilinear grid where data is valid (only available in PolyGrid types)</p></li><li><p><code>weights</code> - An array of <code>Float</code>s, defining the latitude-weights of each valid point in the grid.</p></li></ul><p><a href="https://github.com/GeoRegionsEcosystem/RegionGrids.jl/blob/09c3a8419304463381057d4263e77b7c3ef7ab7d/src/RegionGrids.jl#L30-L43" target="_blank" rel="noreferrer">source</a></p>',5))]),s("details",y,[s("summary",null,[i[12]||(i[12]=s("a",{id:"RegionGrids.RegionGrid",href:"#RegionGrids.RegionGrid"},[s("span",{class:"jlbinding"},"RegionGrids.RegionGrid")],-1)),i[13]||(i[13]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[14]||(i[14]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RegionGrid</span></span></code></pre></div><p>Abstract supertype for geographical region gridded information.</p><p><a href="https://github.com/GeoRegionsEcosystem/RegionGrids.jl/blob/09c3a8419304463381057d4263e77b7c3ef7ab7d/src/RegionGrids.jl#L23-L27" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",u,[s("summary",null,[i[15]||(i[15]=s("a",{id:"RegionGrids.RegionGrid-Tuple{RectRegion, Vector{<:Real}, Vector{<:Real}}",href:"#RegionGrids.RegionGrid-Tuple{RectRegion, Vector{<:Real}, Vector{<:Real}}"},[s("span",{class:"jlbinding"},"RegionGrids.RegionGrid")],-1)),i[16]||(i[16]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[17]||(i[17]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RegionGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lon </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{Vector{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},AbstractRange{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    lat </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{Vector{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},AbstractRange{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ggrd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RectilinearGrid</span></span></code></pre></div><p>Creates a <code>RectGrid</code> or <code>PolyGrid</code> type based on the following arguments. This method is suitable for rectilinear grids of longitude/latitude output such as from Isca, or from satellite and reanalysis gridded datasets.</p><p><strong>Arguments</strong></p><ul><li><p><code>geo</code> : A GeoRegion of interest</p></li><li><p><code>lon</code> : A vector or <code>AbstractRange</code> containing the longitude points</p></li><li><p><code>lat</code> : A vector or <code>AbstractRange</code> containing the latitude points</p></li></ul><p><strong>Returns</strong></p><ul><li><code>ggrd</code> : A <code>RectilinearGrid</code></li></ul><p><a href="https://github.com/GeoRegionsEcosystem/RegionGrids.jl/blob/09c3a8419304463381057d4263e77b7c3ef7ab7d/src/grid/rectilinear.jl#L1-L19" target="_blank" rel="noreferrer">source</a></p>`,7))]),s("details",b,[s("summary",null,[i[18]||(i[18]=s("a",{id:"RegionGrids.RegionGrid-Union{Tuple{FT}, Tuple{GeoRegion, Array{Point2{FT}}}} where FT<:Real",href:"#RegionGrids.RegionGrid-Union{Tuple{FT}, Tuple{GeoRegion, Array{Point2{FT}}}} where FT<:Real"},[s("span",{class:"jlbinding"},"RegionGrids.RegionGrid")],-1)),i[19]||(i[19]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[20]||(i[20]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">RegionGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pnts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Array{Point2{FT}}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Real</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gmsk </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RegionMask</span></span></code></pre></div><p>Creates a <code>RegionMask</code> type based on the following arguments. This method is more suitable for non-rectilinear grids of longitude and latitude points, such as in the output of WRF or CESM.</p><p><strong>Arguments</strong></p><ul><li><p><code>geo</code> : A GeoRegion of interest</p></li><li><p><code>pnts</code> : An array containing the longitude points</p></li></ul><p><strong>Returns</strong></p><ul><li><code>gmsk</code> : A <code>RegionMask</code></li></ul><p><a href="https://github.com/GeoRegionsEcosystem/RegionGrids.jl/blob/09c3a8419304463381057d4263e77b7c3ef7ab7d/src/grid/generalized.jl#L1-L17" target="_blank" rel="noreferrer">source</a></p>`,7))]),s("details",E,[s("summary",null,[i[21]||(i[21]=s("a",{id:"RegionGrids.RegionMask",href:"#RegionGrids.RegionMask"},[s("span",{class:"jlbinding"},"RegionGrids.RegionMask")],-1)),i[22]||(i[22]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[23]||(i[23]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RegionMask </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeneralizedGrid</span></span></code></pre></div><p>Information on a <code>GeneralizedGrid</code> type that is extracted based on arrays of longitude/latitude points.</p><p><a href="https://github.com/GeoRegionsEcosystem/RegionGrids.jl/blob/09c3a8419304463381057d4263e77b7c3ef7ab7d/src/RegionGrids.jl#L110-L114" target="_blank" rel="noreferrer">source</a></p>',3))]),s("details",R,[s("summary",null,[i[24]||(i[24]=s("a",{id:"RegionGrids.TiltGrid",href:"#RegionGrids.TiltGrid"},[s("span",{class:"jlbinding"},"RegionGrids.TiltGrid")],-1)),i[25]||(i[25]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[26]||(i[26]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TiltGrid </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RegionGrid</span></span></code></pre></div><p>Information on a <code>RectilinearGrid</code> type that is extracted based on a <code>TiltRegion</code> type.</p><p>In addition to all the fields common to the <code>RegionGrid</code> abstract type, <code>TiltGrid</code>s type will also contain the following fields:</p><ul><li><p><code>rotX</code> - A vector of <code>Float</code>s, defining indices of the parent longitude vector describing the region</p></li><li><p><code>rotY</code> - A vector of <code>Float</code>s, defining indices of the parent latitude vector describing the region</p></li></ul><p><a href="https://github.com/GeoRegionsEcosystem/RegionGrids.jl/blob/09c3a8419304463381057d4263e77b7c3ef7ab7d/src/RegionGrids.jl#L76-L84" target="_blank" rel="noreferrer">source</a></p>',5))]),s("details",G,[s("summary",null,[i[27]||(i[27]=s("a",{id:"RegionGrids.VectorMask",href:"#RegionGrids.VectorMask"},[s("span",{class:"jlbinding"},"RegionGrids.VectorMask")],-1)),i[28]||(i[28]=t()),n(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),i[29]||(i[29]=e('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">VectorMask </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeneralizedGrid</span></span></code></pre></div><p>Information on a <code>GeneralizedGrid</code> type that is extracted based on vectors of longitude and latitude points.</p><p>A <code>VectorMask</code> type will also contain the following fields:</p><ul><li><p><code>olon</code> - A vector of <code>Float</code>s, defining indices of the original longitude vector describing the region</p></li><li><p><code>olat</code> - A vector of <code>Float</code>s, defining indices of the original latitude vector describing the region</p></li></ul><p><a href="https://github.com/GeoRegionsEcosystem/RegionGrids.jl/blob/09c3a8419304463381057d4263e77b7c3ef7ab7d/src/RegionGrids.jl#L122-L130" target="_blank" rel="noreferrer">source</a></p>',5))]),s("details",f,[s("summary",null,[i[30]||(i[30]=s("a",{id:"RegionGrids.VectorGrid-Union{Tuple{FT}, Tuple{GeoRegion, Array{Point2{FT}, 1}}} where FT<:Real",href:"#RegionGrids.VectorGrid-Union{Tuple{FT}, Tuple{GeoRegion, Array{Point2{FT}, 1}}} where FT<:Real"},[s("span",{class:"jlbinding"},"RegionGrids.VectorGrid")],-1)),i[31]||(i[31]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[32]||(i[32]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VectorGrid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> GeoRegion</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    pnts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vector{Point2{FT}}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> FT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Real</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> gmsk </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> VectorMask</span></span></code></pre></div><p>Creates a <code>VectorMask</code> type based on a vector of</p><p><strong>Arguments</strong></p><ul><li><p><code>geo</code> : A GeoRegion of interest</p></li><li><p><code>pnts</code> : A <code>Vector</code> of <code>Float</code> Types, containing the longitude points</p></li></ul><p><strong>Returns</strong></p><ul><li><code>gmsk</code> : A <code>VectorMask</code></li></ul><p><a href="https://github.com/GeoRegionsEcosystem/RegionGrids.jl/blob/09c3a8419304463381057d4263e77b7c3ef7ab7d/src/grid/generalized.jl#L47-L63" target="_blank" rel="noreferrer">source</a></p>`,7))]),s("details",m,[s("summary",null,[i[33]||(i[33]=s("a",{id:"RegionGrids.extract!-Tuple{AbstractArray{<:Real}, AbstractArray{<:Real}, RegionGrid}",href:"#RegionGrids.extract!-Tuple{AbstractArray{<:Real}, AbstractArray{<:Real}, RegionGrid}"},[s("span",{class:"jlbinding"},"RegionGrids.extract!")],-1)),i[34]||(i[34]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[35]||(i[35]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    odata </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractArray{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ndata </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractArray{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ggrd  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RegionGrid</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span></code></pre></div><p>Extracts data from odata, an Array of dimension N (where N âˆˆ 2,3,4) that contains data of a Parent <code>GeoRegion</code>, into ndata, another Array of dimension N, containing <em><strong>only</strong></em> within a sub <code>GeoRegion</code> we are interested in.</p><p>This allows for iterable in-place modification to save memory space and reduce allocations if the dimensions are fixed.</p><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>Please ensure that the 1st dimension is longitude and 2nd dimension is latitude before proceeding. The order of the 3rd and 4th dimensions (when used), however, is not significant.</p></div><p><strong>Arguments</strong></p><ul><li><p><code>odata</code> : An array of dimension N containing gridded data in the region we are interesting in extracting from</p></li><li><p><code>ndata</code> : An array of dimension N meant as a placeholder for the extracted data to minimize allocations</p></li><li><p><code>ggrd</code> : A <code>RegionGrid</code> containing detailed information on what to extract</p></li></ul><p><a href="https://github.com/GeoRegionsEcosystem/RegionGrids.jl/blob/09c3a8419304463381057d4263e77b7c3ef7ab7d/src/extract/rectilinear.jl#L44-L63" target="_blank" rel="noreferrer">source</a></p>`,7))]),s("details",F,[s("summary",null,[i[36]||(i[36]=s("a",{id:"RegionGrids.extract!-Tuple{AbstractArray{<:Real}, AbstractArray{<:Real}, RegionMask}",href:"#RegionGrids.extract!-Tuple{AbstractArray{<:Real}, AbstractArray{<:Real}, RegionMask}"},[s("span",{class:"jlbinding"},"RegionGrids.extract!")],-1)),i[37]||(i[37]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[38]||(i[38]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    odata </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractArray{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ndata </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractArray{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ggrd  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RegionMask</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> nothing</span></span></code></pre></div><p>Extracts data from odata, an Array of dimension N (where N &gt; 2) that contains data of a Parent <code>GeoRegion</code>, into ndata, another Array of dimension N, containing <em><strong>only</strong></em> within a sub <code>GeoRegion</code> we are interested in.</p><p>This allows for iterable in-place modification to save memory space and reduce allocations if the dimensions are fixed.</p><div class="warning custom-block"><p class="custom-block-title">Dimension Order</p><p>Please ensure that the 1st dimension is longitude and 2nd dimension is latitude</p></div><p><strong>Arguments</strong></p><ul><li><p><code>odata</code> : An array of dimension N containing gridded data in the region we are interesting in extracting from</p></li><li><p><code>ndata</code> : An array of dimension N meant as a placeholder for the extracted data to minimize allocations</p></li><li><p><code>ggrd</code> : A <code>RegionGrid</code> containing detailed information on what to extract</p></li></ul><p><a href="https://github.com/GeoRegionsEcosystem/RegionGrids.jl/blob/09c3a8419304463381057d4263e77b7c3ef7ab7d/src/extract/generalized.jl#L59-L78" target="_blank" rel="noreferrer">source</a></p>`,7))]),s("details",A,[s("summary",null,[i[39]||(i[39]=s("a",{id:"RegionGrids.extract-Tuple{AbstractArray{<:Real}, RegionMask}",href:"#RegionGrids.extract-Tuple{AbstractArray{<:Real}, RegionMask}"},[s("span",{class:"jlbinding"},"RegionGrids.extract")],-1)),i[40]||(i[40]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[41]||(i[41]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    odata </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractArray{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ggrd  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RegionMask</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    crop  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Bool</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Array{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Using a <code>RegionMask</code> for a region of interest, retrieve valid data - all other data outside the region of interest</p><div class="warning custom-block"><p class="custom-block-title">Dimension Order</p><p>Please ensure that the 1st dimension is longitude and 2nd dimension is latitude.</p></div><p><strong>Arguments</strong></p><ul><li><p><code>odata</code> : An array of containing the original gridded data.</p></li><li><p><code>ggrd</code> : A <code>RegionMask</code> type containing detailed information on the ranges of valid longitude/latitude data to be extracted.</p></li></ul><p><strong>Keyword Arguments</strong></p><ul><li><code>crop</code> : If <code>true</code>, crop new array to valid data to save size.</li></ul><p><a href="https://github.com/GeoRegionsEcosystem/RegionGrids.jl/blob/09c3a8419304463381057d4263e77b7c3ef7ab7d/src/extract/generalized.jl#L1-L21" target="_blank" rel="noreferrer">source</a></p>`,8))]),s("details",j,[s("summary",null,[i[42]||(i[42]=s("a",{id:"RegionGrids.extract-Union{Tuple{FT}, Tuple{AbstractArray{FT}, RegionGrid}} where FT<:Real",href:"#RegionGrids.extract-Union{Tuple{FT}, Tuple{AbstractArray{FT}, RegionGrid}} where FT<:Real"},[s("span",{class:"jlbinding"},"RegionGrids.extract")],-1)),i[43]||(i[43]=t()),n(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[44]||(i[44]=e(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">extract</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    odata </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractArray{&lt;:Real}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ggrd  </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RegionGrid</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Array{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Real</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Extracts data from odata, an Array that contains data of a Parent <code>GeoRegion</code>, into another Array of dimension N, containing <em><strong>only</strong></em> within a sub <code>GeoRegion</code> we are interested in.</p><div class="warning custom-block"><p class="custom-block-title">Warning</p><p>Please ensure that the 1st dimension is longitude and 2nd dimension is latitude before proceeding. The order of the 3rd and 4th dimensions (when used), however, is not significant.</p></div><p><strong>Arguments</strong></p><ul><li><p><code>odata</code> : An array of dimension N containing gridded data in the region we are interesting in extracting from</p></li><li><p><code>ggrd</code> : A <code>RegionGrid</code> containing detailed information on what to extract</p></li></ul><p><a href="https://github.com/GeoRegionsEcosystem/RegionGrids.jl/blob/09c3a8419304463381057d4263e77b7c3ef7ab7d/src/extract/rectilinear.jl#L1-L16" target="_blank" rel="noreferrer">source</a></p>`,6))])])}const V=l(p,[["render",C]]);export{M as __pageData,V as default};
